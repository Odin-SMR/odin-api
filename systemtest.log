system: commands[0]> pytest src/systemtest
============================= test session starts ==============================
platform linux -- Python 3.8.17, pytest-7.4.2, pluggy-1.3.0
cachedir: .tox/system/.pytest_cache
rootdir: /home/joakim/work/odin-api
configfile: tox.ini
plugins: freezegun-0.4.2, docker-tools-3.1.3, docker-2.0.1
collected 219 items

src/systemtest/test_apriori.py EE                                        [  0%]
src/systemtest/test_browser.py EEEEEEE                                   [  4%]
src/systemtest/test_examples.py EssEE                                    [  6%]
src/systemtest/test_frequency_calibration.py EEEEEEEE                    [ 10%]
src/systemtest/test_level1.py EEEEEEsEEEE                                [ 15%]
src/systemtest/test_level1_cached.py EEEEEEEEEEEEEEE                     [ 21%]
src/systemtest/test_level1b_scanlogdata_exporter.py EEEEEE               [ 24%]
src/systemtest/test_level2.py EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE [ 43%]
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE [ 76%]
EEEEEEEEEEEEEEEEEEEEEEE                                                  [ 87%]
src/systemtest/test_swagger.py sE                                        [ 88%]
src/systemtest/test_vds.py EEEEEEEEEEEEEEEE                              [ 95%]
src/systemtest/api/test_project_annotations.py EEEEEEEEEE                [100%]

==================================== ERRORS ====================================
_________ ERROR at setup of TestApriori.test_ozone_apriori_file_exists _________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
______ ERROR at setup of TestApriori.test_ozone_apriori_file_is_readable _______

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
______________ ERROR at setup of TestBrowser.test_main_page_is_up ______________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___________ ERROR at setup of TestLevel2Browser.test_main_page_is_up ___________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________ ERROR at setup of TestLevel2Browser.test_selectors_displayed _________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
________ ERROR at setup of TestLevel2Browser.test_project_is_selectable ________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_______ ERROR at setup of TestLevel2Browser.test_freqmode_is_selectable ________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
__________ ERROR at setup of TestLevel2Browser.test_scan_get_selected __________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____________ ERROR at setup of TestLevel2Browser.test_freqmode_list ____________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
________ ERROR at setup of TestLevel1Examples.test_get_scans_for_period ________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
__________ ERROR at setup of TestLevel1Examples.test_filter_by_param ___________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________ ERROR at setup of TestLevel1Examples.test_filter_by_quality __________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____________ ERROR at setup of TestFreqcorr572.test_altitude_check _____________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
________ ERROR at setup of TestFreqcorr572.test_get_initial_fit_values _________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_______________ ERROR at setup of TestFreqcorr572.test_fit_data ________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____________ ERROR at setup of TestFreqcorr572.test_get_tb_profile _____________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
______ ERROR at setup of TestFreqcorr572.test_identify_species_by_profile ______

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_______ ERROR at setup of TestFreqcorr572.test_identify_species_by_lines _______

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_____ ERROR at setup of TestFreqcorr572.test_get_frequency_offset_of_scan ______

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_______ ERROR at setup of TestFreqcorr572.test_run_frequency_correction ________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_____________ ERROR at setup of TestLevel1Views.test_backend_info ______________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestLevel1Views.test_faulty_freqmode[{}/rest_api/v5/freqmode_raw/2015-01-12/42/] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestLevel1Views.test_faulty_freqmode[{}/rest_api/v5/level1/42/7015092840/L1b/] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestLevel1Views.test_faulty_freqmode[{}/rest_api/v5/level1/42/7015092840/ptz/] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestLevel1Views.test_faulty_freqmode[{}/rest_api/v5/level1/42/7015092840/apriori/O3] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestLevel1Views.test_faulty_freqmode[{}/rest_api/v5/level1/42/7015092840/collocations/] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_______________ ERROR at setup of TestLevel1Views.test_get_scan ________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____________ ERROR at setup of TestLevel1Views.test_get_scan_debug _____________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
______________ ERROR at setup of TestLevel1Views.test_get_apriori ______________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___________ ERROR at setup of TestLevel1Views.test_get_collocations ____________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
__________ ERROR at setup of TestLevel1CachedViews.test_backend_info ___________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestLevel1CachedViews.test_faulty_freqmode[{}/rest_api/v4/l1_log/42/7019446353] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestLevel1CachedViews.test_faulty_freqmode[{}/rest_api/v4/freqmode_info/2015-01-15/AC1/42] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestLevel1CachedViews.test_faulty_freqmode[{}/rest_api/v5/level1/42/7019446353/Log] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestLevel1CachedViews.test_faulty_freqmode[{}/rest_api/v5/freqmode_info/2015-01-15/42] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestLevel1CachedViews.test_faulty_freqmode[{}/rest_api/v5/level1/42/scans/?start_time=2015-01-11&end_time=2015-01-13] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_____ ERROR at setup of TestLevel1CachedViews.test_freqmode_info_hierarchy _____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____________ ERROR at setup of TestLevel1CachedViews.test_scan_log _____________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___________ ERROR at setup of TestLevel1CachedViews.test_period_info ___________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestLevel1CachedViews.test_scan_list[2015-01-11-2015-01-12--HTTPStatus.OK-489-3] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestLevel1CachedViews.test_scan_list[2015-01-11-2015-01-13--HTTPStatus.OK-805-3] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestLevel1CachedViews.test_scan_list[2015-01-13-2015-01-11--HTTPStatus.BAD_REQUEST-None-None] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestLevel1CachedViews.test_scan_list[2015-01-11-2015-01-12-&apriori=BrO&apriori=O3-HTTPStatus.OK-489-5] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestLevel1CachedViews.test_scan_list[2015-01-11-2015-01-12-&apriori=all-HTTPStatus.OK-489-43] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
__ ERROR at setup of test_get_scan_logdata_cached_returns_consistent_datetime __

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___________ ERROR at setup of TestScanInfoExporter.test_get_scanids ____________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________ ERROR at setup of TestScanInfoExporter.test_extract_scan_log _________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________ ERROR at setup of TestScanInfoExporter.test_get_log_of_scans _________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
________ ERROR at setup of TestScanInfoExporter.test_scan_data_is_valid ________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
______ ERROR at setup of TestScanInfoExporter.test_scan_data_is_unvalid_1 ______

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
______ ERROR at setup of TestScanInfoExporter.test_scan_data_is_unvalid_2 ______

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_____________ ERROR at setup of TestProjects.test_get_v4_projects ______________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_____________ ERROR at setup of TestProjects.test_get_v5_projects ______________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___________ ERROR at setup of TestProjects.test_get_v5_dev_projects ____________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_____________ ERROR at setup of TestProjects.test_get_project[v4] ______________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_____________ ERROR at setup of TestProjects.test_get_project[v5] ______________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____________ ERROR at setup of TestWriteLevel2.test_post_and_delete ____________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
______________ ERROR at setup of TestWriteLevel2.test_update_data ______________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
__________ ERROR at setup of TestWriteLevel2.test_posting_failed_scan __________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____________ ERROR at setup of TestWriteLevel2.test_single_product _____________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___________ ERROR at setup of TestWriteLevel2.test_post_bad_url_d[] ____________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
__________ ERROR at setup of TestWriteLevel2.test_post_bad_url_d[bad] __________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___________ ERROR at setup of TestWriteLevel2.test_missing_post_data ___________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____________ ERROR at setup of TestWriteLevel2.test_missing_l2_data ____________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
________ ERROR at setup of TestWriteLevel2.test_missing_l2i_scanid_data ________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
________ ERROR at setup of TestWriteLevel2.test_missing_l2_scanid_data _________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___________ ERROR at setup of TestWriteLevel2.test_freqmode_mismatch ___________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____________ ERROR at setup of TestWriteLevel2.test_scanid_mismatch ____________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____________ ERROR at setup of TestReadLevel2.test_get_comments_v4 _____________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____________ ERROR at setup of TestReadLevel2.test_get_comments_v5 _____________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_____ ERROR at setup of TestReadLevel2.test_get_comments_v5_respects_limit _____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____ ERROR at setup of TestReadLevel2.test_get_comments_v5_respects_offset _____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_comments_v5_empty_if_offset_gt_count _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____ ERROR at setup of TestReadLevel2.test_get_comments_v5_has_link_header _____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
__________ ERROR at setup of TestReadLevel2.test_get_scans[v4-None-1] __________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
__________ ERROR at setup of TestReadLevel2.test_get_scans[v5-None-1] __________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_scans[v4-?start_time=2015-01-12-1] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_scans[v5-?start_time=2015-01-12-1] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_scans[v4-?start_time=2015-01-13-0] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_scans[v5-?start_time=2015-01-13-0] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
__ ERROR at setup of TestReadLevel2.test_get_scans[v4-?end_time=2015-01-12-0] __

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
__ ERROR at setup of TestReadLevel2.test_get_scans[v5-?end_time=2015-01-12-0] __

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
__ ERROR at setup of TestReadLevel2.test_get_scans[v4-?end_time=2015-01-13-1] __

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
__ ERROR at setup of TestReadLevel2.test_get_scans[v5-?end_time=2015-01-13-1] __

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_scans_with_comments[v4-Status: 9 spectra left after quality filtering-1] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_scans_with_comments[v5-Status: 9 spectra left after quality filtering-1] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_scans_with_comments[v4-Comment does not exist-0] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_scans_with_comments[v5-Comment does not exist-0] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
________ ERROR at setup of TestReadLevel2.test_get_scans_respects_limit ________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_______ ERROR at setup of TestReadLevel2.test_get_scans_respects_offset ________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___ ERROR at setup of TestReadLevel2.test_get_scans_empty_if_offset_gt_count ___

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_______ ERROR at setup of TestReadLevel2.test_get_scans_has_link_header ________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
__________ ERROR at setup of TestReadLevel2.test_get_failed_scans_v4 ___________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
__________ ERROR at setup of TestReadLevel2.test_get_failed_scans_v5 ___________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
__ ERROR at setup of TestReadLevel2.test_get_failed_scans_respsects_limimt_v5 __

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____ ERROR at setup of TestReadLevel2.test_get_failed_scans_respects_offset ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_failed_scans_empty_if_offset_gt_count _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____ ERROR at setup of TestReadLevel2.test_get_failed_scans_has_link_header ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
______________ ERROR at setup of TestReadLevel2.test_get_scan_v4 _______________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____ ERROR at setup of TestReadLevel2.test_get_non_existing_scan_v4[2-None] ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____ ERROR at setup of TestReadLevel2.test_get_non_existing_scan_v4[0-None] ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____ ERROR at setup of TestReadLevel2.test_get_non_existing_scan_v4[None-0] ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
______________ ERROR at setup of TestReadLevel2.test_get_scan_v5 _______________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____ ERROR at setup of TestReadLevel2.test_get_scan_v5_failed_l2_processing ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________ ERROR at setup of TestReadLevel2.test_get_scan_v5_parts[L2i] _________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________ ERROR at setup of TestReadLevel2.test_get_scan_v5_parts[L2c] _________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________ ERROR at setup of TestReadLevel2.test_get_scan_v5_parts[L2] __________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
______ ERROR at setup of TestReadLevel2.test_get_scan_v5_part_by_product _______

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____________ ERROR at setup of TestReadLevel2.test_get_products[v4] ____________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____________ ERROR at setup of TestReadLevel2.test_get_products[v5] ____________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_____ ERROR at setup of TestReadLevel2.test_get_products_for_freqmode[v4] ______

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_____ ERROR at setup of TestReadLevel2.test_get_products_for_freqmode[v5] ______

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_products_for_missing_freqmode[v4] __

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_products_for_missing_freqmode[v5] __

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_locations_v4[locations0-30-5-param0] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_locations_v4[locations1-30-2-param1] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_locations_v4[locations2-100-7-param2] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_locations_v4[locations3-100-3-param3] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_locations_v4[locations4-1000-25-param4] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_locations_v4[locations5-30-4-param5] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_locations_v5[locations0-30-5-param0] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_locations_v5[locations1-30-2-param1] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_locations_v5[locations2-100-7-param2] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_locations_v5[locations3-100-3-param3] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_locations_v5[locations4-1000-25-param4] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_locations_v5[locations5-30-4-param5] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____ ERROR at setup of TestReadLevel2.test_get_date_v4[2016-10-06-0-param0] ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___ ERROR at setup of TestReadLevel2.test_get_date_v4[2015-04-01-61-param1] ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____ ERROR at setup of TestReadLevel2.test_get_date_v4[2015-04-01-1-param2] ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___ ERROR at setup of TestReadLevel2.test_get_date_v4[2015-04-01-11-param3] ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___ ERROR at setup of TestReadLevel2.test_get_date_v4[2015-04-01-15-param4] ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____ ERROR at setup of TestReadLevel2.test_get_date_v4[2015-04-01-6-param5] ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___ ERROR at setup of TestReadLevel2.test_get_date_v4[2015-04-01-21-param6] ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____ ERROR at setup of TestReadLevel2.test_get_date_v4[2015-04-01-4-param7] ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___ ERROR at setup of TestReadLevel2.test_get_date_v4[2015-04-01-15-param8] ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____ ERROR at setup of TestReadLevel2.test_get_date_v5[2016-10-06-0-param0] ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___ ERROR at setup of TestReadLevel2.test_get_date_v5[2015-04-01-61-param1] ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____ ERROR at setup of TestReadLevel2.test_get_date_v5[2015-04-01-1-param2] ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___ ERROR at setup of TestReadLevel2.test_get_date_v5[2015-04-01-11-param3] ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___ ERROR at setup of TestReadLevel2.test_get_date_v5[2015-04-01-15-param4] ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____ ERROR at setup of TestReadLevel2.test_get_date_v5[2015-04-01-6-param5] ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___ ERROR at setup of TestReadLevel2.test_get_date_v5[2015-04-01-21-param6] ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____ ERROR at setup of TestReadLevel2.test_get_date_v5[2015-04-01-4-param7] ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___ ERROR at setup of TestReadLevel2.test_get_date_v5[2015-04-01-15-param8] ____

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________ ERROR at setup of TestReadLevel2.test_get_area_v4[61-param0] _________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________ ERROR at setup of TestReadLevel2.test_get_area_v4[0-param1] __________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________ ERROR at setup of TestReadLevel2.test_get_area_v4[61-param2] _________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________ ERROR at setup of TestReadLevel2.test_get_area_v4[0-param3] __________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________ ERROR at setup of TestReadLevel2.test_get_area_v4[6-param4] __________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________ ERROR at setup of TestReadLevel2.test_get_area_v4[17-param5] _________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________ ERROR at setup of TestReadLevel2.test_get_area_v4[2-param6] __________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________ ERROR at setup of TestReadLevel2.test_get_area_v5[61-param0] _________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________ ERROR at setup of TestReadLevel2.test_get_area_v5[0-param1] __________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________ ERROR at setup of TestReadLevel2.test_get_area_v5[61-param2] _________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________ ERROR at setup of TestReadLevel2.test_get_area_v5[0-param3] __________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________ ERROR at setup of TestReadLevel2.test_get_area_v5[6-param4] __________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________ ERROR at setup of TestReadLevel2.test_get_area_v5[17-param5] _________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________ ERROR at setup of TestReadLevel2.test_get_area_v5[2-param6] __________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_area_v5_paging_returns_ok_data[0-expect_scanids0] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_area_v5_paging_returns_ok_data[7014791088-expect_scanids1] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_area_v5_paging_returns_ok_data[7014791101-expect_scanids2] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_area_v5_paging_returns_ok_or_no_links[0-True-min_scanid=7014791088] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_area_v5_paging_returns_ok_or_no_links[7014791088-False-None] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_locations_v5_paging_returns_ok_or_no_links[0-True-min_scanid=7014791088] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_locations_v5_paging_returns_ok_or_no_links[7014791088-False-None] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_date_v5_paging_returns_ok_or_no_links[0-True-min_scanid=7014791088] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_get_date_v5_paging_returns_ok_or_no_links[7014791088-False-None] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_bad_requests[/rest_api/v5/level2/testproject/area-HTTPStatus.NOT_FOUND-None] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_bad_requests[/rest_api/v5/level2/testproject/locations-HTTPStatus.NOT_FOUND-None] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-None] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_bad_requests[/rest_api/v5/level2/development/testproject/locations-HTTPStatus.BAD_REQUEST-param3] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param4] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param5] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param6] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param7] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param8] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param9] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param10] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param11] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param12] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param13] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param14] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_ ERROR at setup of TestReadLevel2.test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param15] _

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___________ ERROR at setup of TestReadLevel2.test_doesnt_return_infs ___________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
______________ ERROR at setup of TestPublishProject.test_publish _______________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
______ ERROR at setup of TestPublishProject.test_publish_unknown_project _______

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___________ ERROR at setup of TestPublishProject.test_no_credentials ___________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
__________ ERROR at setup of TestPublishProject.test_bad_credentials ___________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________________ ERROR at setup of TestSwaggerViews.test_gui __________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
__________________ ERROR at setup of test_vds_file4ace_exists __________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________________ ERROR at setup of test_vds_file4mipas_exists _________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_______________ ERROR at setup of test_vds_file4mipas_esa_exists _______________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
__________________ ERROR at setup of test_vds_file4mls_exists __________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
________________ ERROR at setup of test_vds_file4osiris_exists _________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
________________ ERROR at setup of test_vds_file4sageIII_exists ________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
________________ ERROR at setup of test_vds_file4smiles_exists _________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
__________________ ERROR at setup of test_vds_file4smr_exists __________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_______________ ERROR at setup of test_vds_file4ace_is_readable ________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
______________ ERROR at setup of test_vds_file4mipas_is_readable _______________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____________ ERROR at setup of test_vds_file4mipas_esa_is_readable _____________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_______________ ERROR at setup of test_vds_file4mls_is_readable ________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
______________ ERROR at setup of test_vds_file4smiles_is_readable ______________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_____________ ERROR at setup of test_vds_file4sageIII_is_readable ______________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
______________ ERROR at setup of test_vds_file4osiris_is_readable ______________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_______________ ERROR at setup of test_vds_file4smr_is_readable ________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________________ ERROR at setup of test_get_empty_annotations _________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
____________ ERROR at setup of test_get_annotations_unknown_project ____________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________________________ ERROR at setup of test_post __________________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_____________________ ERROR at setup of test_post_multiple _____________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________________ ERROR at setup of test_post_unknown_project __________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_____________________ ERROR at setup of test_post_bad_text _____________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_____________________ ERROR at setup of test_post_no_text ______________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
___________________ ERROR at setup of test_post_bad_freqmode ___________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
__________________ ERROR at setup of test_post_no_credentials __________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
_________________ ERROR at setup of test_post_bad_credentials __________________

docker_compose_command = 'docker compose'
docker_compose_file = '/home/joakim/work/odin-api/docker-compose.systemtest.yml'
docker_compose_project_name = 'pytest9681', docker_setup = 'up --build -d'
docker_cleanup = 'down -v'

    @pytest.fixture(scope="session")
    def docker_services(
        docker_compose_command,
        docker_compose_file,
        docker_compose_project_name,
        docker_setup,
        docker_cleanup,
    ):
        """Start all services from a docker compose file (`docker-compose up`).
        After test are finished, shutdown all services (`docker-compose down`)."""
    
>       with get_docker_services(
            docker_compose_command,
            docker_compose_file,
            docker_compose_project_name,
            docker_setup,
            docker_cleanup,
        ) as docker_service:

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.8/contextlib.py:113: in __enter__
    return next(self.gen)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:199: in get_docker_services
    docker_compose.execute(docker_setup)
.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:129: in execute
    return execute(command)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

command = 'docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d'
success_codes = (0,)

    def execute(command, success_codes=(0,)):
        """Run a shell command."""
        try:
            output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True)
            status = 0
        except subprocess.CalledProcessError as error:
            output = error.output or b""
            status = error.returncode
            command = error.cmd
    
        if status not in success_codes:
>           raise Exception(
                'Command {} returned {}: """{}""".'.format(
                    command, status, output.decode("utf-8")
                )
            )
E           Exception: Command docker compose -f "/home/joakim/work/odin-api/docker-compose.systemtest.yml" -p "pytest9681" up --build -d returned 1: """request returned Internal Server Error for API route and version http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/json?all=1&filters=%7B%22label%22%3A%7B%22com.docker.compose.config-hash%22%3Atrue%2C%22com.docker.compose.project%3Dpytest9681%22%3Atrue%7D%7D, check if the server supports the requested API version
E           """.

.tox/system/lib/python3.8/site-packages/pytest_docker/plugin.py:24: Exception
=============================== warnings summary ===============================
.tox/system/lib/python3.8/site-packages/pytest_freezegun.py:17: 438 warnings
  /home/joakim/work/odin-api/.tox/system/lib/python3.8/site-packages/pytest_freezegun.py:17: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    if LooseVersion(pytest.__version__) < LooseVersion('3.6.0'):

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
ERROR src/systemtest/test_apriori.py::TestApriori::test_ozone_apriori_file_exists
ERROR src/systemtest/test_apriori.py::TestApriori::test_ozone_apriori_file_is_readable
ERROR src/systemtest/test_browser.py::TestBrowser::test_main_page_is_up - Exc...
ERROR src/systemtest/test_browser.py::TestLevel2Browser::test_main_page_is_up
ERROR src/systemtest/test_browser.py::TestLevel2Browser::test_selectors_displayed
ERROR src/systemtest/test_browser.py::TestLevel2Browser::test_project_is_selectable
ERROR src/systemtest/test_browser.py::TestLevel2Browser::test_freqmode_is_selectable
ERROR src/systemtest/test_browser.py::TestLevel2Browser::test_scan_get_selected
ERROR src/systemtest/test_browser.py::TestLevel2Browser::test_freqmode_list
ERROR src/systemtest/test_examples.py::TestLevel1Examples::test_get_scans_for_period
ERROR src/systemtest/test_examples.py::TestLevel1Examples::test_filter_by_param
ERROR src/systemtest/test_examples.py::TestLevel1Examples::test_filter_by_quality
ERROR src/systemtest/test_frequency_calibration.py::TestFreqcorr572::test_altitude_check
ERROR src/systemtest/test_frequency_calibration.py::TestFreqcorr572::test_get_initial_fit_values
ERROR src/systemtest/test_frequency_calibration.py::TestFreqcorr572::test_fit_data
ERROR src/systemtest/test_frequency_calibration.py::TestFreqcorr572::test_get_tb_profile
ERROR src/systemtest/test_frequency_calibration.py::TestFreqcorr572::test_identify_species_by_profile
ERROR src/systemtest/test_frequency_calibration.py::TestFreqcorr572::test_identify_species_by_lines
ERROR src/systemtest/test_frequency_calibration.py::TestFreqcorr572::test_get_frequency_offset_of_scan
ERROR src/systemtest/test_frequency_calibration.py::TestFreqcorr572::test_run_frequency_correction
ERROR src/systemtest/test_level1.py::TestLevel1Views::test_backend_info - Exc...
ERROR src/systemtest/test_level1.py::TestLevel1Views::test_faulty_freqmode[{}/rest_api/v5/freqmode_raw/2015-01-12/42/]
ERROR src/systemtest/test_level1.py::TestLevel1Views::test_faulty_freqmode[{}/rest_api/v5/level1/42/7015092840/L1b/]
ERROR src/systemtest/test_level1.py::TestLevel1Views::test_faulty_freqmode[{}/rest_api/v5/level1/42/7015092840/ptz/]
ERROR src/systemtest/test_level1.py::TestLevel1Views::test_faulty_freqmode[{}/rest_api/v5/level1/42/7015092840/apriori/O3]
ERROR src/systemtest/test_level1.py::TestLevel1Views::test_faulty_freqmode[{}/rest_api/v5/level1/42/7015092840/collocations/]
ERROR src/systemtest/test_level1.py::TestLevel1Views::test_get_scan - Excepti...
ERROR src/systemtest/test_level1.py::TestLevel1Views::test_get_scan_debug - E...
ERROR src/systemtest/test_level1.py::TestLevel1Views::test_get_apriori - Exce...
ERROR src/systemtest/test_level1.py::TestLevel1Views::test_get_collocations
ERROR src/systemtest/test_level1_cached.py::TestLevel1CachedViews::test_backend_info
ERROR src/systemtest/test_level1_cached.py::TestLevel1CachedViews::test_faulty_freqmode[{}/rest_api/v4/l1_log/42/7019446353]
ERROR src/systemtest/test_level1_cached.py::TestLevel1CachedViews::test_faulty_freqmode[{}/rest_api/v4/freqmode_info/2015-01-15/AC1/42]
ERROR src/systemtest/test_level1_cached.py::TestLevel1CachedViews::test_faulty_freqmode[{}/rest_api/v5/level1/42/7019446353/Log]
ERROR src/systemtest/test_level1_cached.py::TestLevel1CachedViews::test_faulty_freqmode[{}/rest_api/v5/freqmode_info/2015-01-15/42]
ERROR src/systemtest/test_level1_cached.py::TestLevel1CachedViews::test_faulty_freqmode[{}/rest_api/v5/level1/42/scans/?start_time=2015-01-11&end_time=2015-01-13]
ERROR src/systemtest/test_level1_cached.py::TestLevel1CachedViews::test_freqmode_info_hierarchy
ERROR src/systemtest/test_level1_cached.py::TestLevel1CachedViews::test_scan_log
ERROR src/systemtest/test_level1_cached.py::TestLevel1CachedViews::test_period_info
ERROR src/systemtest/test_level1_cached.py::TestLevel1CachedViews::test_scan_list[2015-01-11-2015-01-12--HTTPStatus.OK-489-3]
ERROR src/systemtest/test_level1_cached.py::TestLevel1CachedViews::test_scan_list[2015-01-11-2015-01-13--HTTPStatus.OK-805-3]
ERROR src/systemtest/test_level1_cached.py::TestLevel1CachedViews::test_scan_list[2015-01-13-2015-01-11--HTTPStatus.BAD_REQUEST-None-None]
ERROR src/systemtest/test_level1_cached.py::TestLevel1CachedViews::test_scan_list[2015-01-11-2015-01-12-&apriori=BrO&apriori=O3-HTTPStatus.OK-489-5]
ERROR src/systemtest/test_level1_cached.py::TestLevel1CachedViews::test_scan_list[2015-01-11-2015-01-12-&apriori=all-HTTPStatus.OK-489-43]
ERROR src/systemtest/test_level1_cached.py::test_get_scan_logdata_cached_returns_consistent_datetime
ERROR src/systemtest/test_level1b_scanlogdata_exporter.py::TestScanInfoExporter::test_get_scanids
ERROR src/systemtest/test_level1b_scanlogdata_exporter.py::TestScanInfoExporter::test_extract_scan_log
ERROR src/systemtest/test_level1b_scanlogdata_exporter.py::TestScanInfoExporter::test_get_log_of_scans
ERROR src/systemtest/test_level1b_scanlogdata_exporter.py::TestScanInfoExporter::test_scan_data_is_valid
ERROR src/systemtest/test_level1b_scanlogdata_exporter.py::TestScanInfoExporter::test_scan_data_is_unvalid_1
ERROR src/systemtest/test_level1b_scanlogdata_exporter.py::TestScanInfoExporter::test_scan_data_is_unvalid_2
ERROR src/systemtest/test_level2.py::TestProjects::test_get_v4_projects - Exc...
ERROR src/systemtest/test_level2.py::TestProjects::test_get_v5_projects - Exc...
ERROR src/systemtest/test_level2.py::TestProjects::test_get_v5_dev_projects
ERROR src/systemtest/test_level2.py::TestProjects::test_get_project[v4] - Exc...
ERROR src/systemtest/test_level2.py::TestProjects::test_get_project[v5] - Exc...
ERROR src/systemtest/test_level2.py::TestWriteLevel2::test_post_and_delete - ...
ERROR src/systemtest/test_level2.py::TestWriteLevel2::test_update_data - Exce...
ERROR src/systemtest/test_level2.py::TestWriteLevel2::test_posting_failed_scan
ERROR src/systemtest/test_level2.py::TestWriteLevel2::test_single_product - E...
ERROR src/systemtest/test_level2.py::TestWriteLevel2::test_post_bad_url_d[]
ERROR src/systemtest/test_level2.py::TestWriteLevel2::test_post_bad_url_d[bad]
ERROR src/systemtest/test_level2.py::TestWriteLevel2::test_missing_post_data
ERROR src/systemtest/test_level2.py::TestWriteLevel2::test_missing_l2_data - ...
ERROR src/systemtest/test_level2.py::TestWriteLevel2::test_missing_l2i_scanid_data
ERROR src/systemtest/test_level2.py::TestWriteLevel2::test_missing_l2_scanid_data
ERROR src/systemtest/test_level2.py::TestWriteLevel2::test_freqmode_mismatch
ERROR src/systemtest/test_level2.py::TestWriteLevel2::test_scanid_mismatch - ...
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_comments_v4 - E...
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_comments_v5 - E...
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_comments_v5_respects_limit
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_comments_v5_respects_offset
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_comments_v5_empty_if_offset_gt_count
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_comments_v5_has_link_header
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scans[v4-None-1]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scans[v5-None-1]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scans[v4-?start_time=2015-01-12-1]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scans[v5-?start_time=2015-01-12-1]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scans[v4-?start_time=2015-01-13-0]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scans[v5-?start_time=2015-01-13-0]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scans[v4-?end_time=2015-01-12-0]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scans[v5-?end_time=2015-01-12-0]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scans[v4-?end_time=2015-01-13-1]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scans[v5-?end_time=2015-01-13-1]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scans_with_comments[v4-Status: 9 spectra left after quality filtering-1]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scans_with_comments[v5-Status: 9 spectra left after quality filtering-1]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scans_with_comments[v4-Comment does not exist-0]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scans_with_comments[v5-Comment does not exist-0]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scans_respects_limit
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scans_respects_offset
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scans_empty_if_offset_gt_count
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scans_has_link_header
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_failed_scans_v4
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_failed_scans_v5
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_failed_scans_respsects_limimt_v5
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_failed_scans_respects_offset
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_failed_scans_empty_if_offset_gt_count
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_failed_scans_has_link_header
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scan_v4 - Excep...
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_non_existing_scan_v4[2-None]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_non_existing_scan_v4[0-None]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_non_existing_scan_v4[None-0]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scan_v5 - Excep...
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scan_v5_failed_l2_processing
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scan_v5_parts[L2i]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scan_v5_parts[L2c]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scan_v5_parts[L2]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_scan_v5_part_by_product
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_products[v4] - ...
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_products[v5] - ...
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_products_for_freqmode[v4]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_products_for_freqmode[v5]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_products_for_missing_freqmode[v4]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_products_for_missing_freqmode[v5]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_locations_v4[locations0-30-5-param0]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_locations_v4[locations1-30-2-param1]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_locations_v4[locations2-100-7-param2]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_locations_v4[locations3-100-3-param3]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_locations_v4[locations4-1000-25-param4]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_locations_v4[locations5-30-4-param5]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_locations_v5[locations0-30-5-param0]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_locations_v5[locations1-30-2-param1]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_locations_v5[locations2-100-7-param2]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_locations_v5[locations3-100-3-param3]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_locations_v5[locations4-1000-25-param4]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_locations_v5[locations5-30-4-param5]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_date_v4[2016-10-06-0-param0]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_date_v4[2015-04-01-61-param1]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_date_v4[2015-04-01-1-param2]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_date_v4[2015-04-01-11-param3]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_date_v4[2015-04-01-15-param4]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_date_v4[2015-04-01-6-param5]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_date_v4[2015-04-01-21-param6]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_date_v4[2015-04-01-4-param7]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_date_v4[2015-04-01-15-param8]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_date_v5[2016-10-06-0-param0]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_date_v5[2015-04-01-61-param1]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_date_v5[2015-04-01-1-param2]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_date_v5[2015-04-01-11-param3]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_date_v5[2015-04-01-15-param4]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_date_v5[2015-04-01-6-param5]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_date_v5[2015-04-01-21-param6]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_date_v5[2015-04-01-4-param7]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_date_v5[2015-04-01-15-param8]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_area_v4[61-param0]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_area_v4[0-param1]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_area_v4[61-param2]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_area_v4[0-param3]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_area_v4[6-param4]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_area_v4[17-param5]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_area_v4[2-param6]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_area_v5[61-param0]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_area_v5[0-param1]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_area_v5[61-param2]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_area_v5[0-param3]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_area_v5[6-param4]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_area_v5[17-param5]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_area_v5[2-param6]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_area_v5_paging_returns_ok_data[0-expect_scanids0]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_area_v5_paging_returns_ok_data[7014791088-expect_scanids1]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_area_v5_paging_returns_ok_data[7014791101-expect_scanids2]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_area_v5_paging_returns_ok_or_no_links[0-True-min_scanid=7014791088]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_area_v5_paging_returns_ok_or_no_links[7014791088-False-None]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_locations_v5_paging_returns_ok_or_no_links[0-True-min_scanid=7014791088]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_locations_v5_paging_returns_ok_or_no_links[7014791088-False-None]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_date_v5_paging_returns_ok_or_no_links[0-True-min_scanid=7014791088]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_get_date_v5_paging_returns_ok_or_no_links[7014791088-False-None]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_bad_requests[/rest_api/v5/level2/testproject/area-HTTPStatus.NOT_FOUND-None]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_bad_requests[/rest_api/v5/level2/testproject/locations-HTTPStatus.NOT_FOUND-None]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-None]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_bad_requests[/rest_api/v5/level2/development/testproject/locations-HTTPStatus.BAD_REQUEST-param3]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param4]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param5]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param6]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param7]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param8]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param9]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param10]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param11]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param12]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param13]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param14]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_bad_requests[/rest_api/v5/level2/development/testproject/area-HTTPStatus.BAD_REQUEST-param15]
ERROR src/systemtest/test_level2.py::TestReadLevel2::test_doesnt_return_infs
ERROR src/systemtest/test_level2.py::TestPublishProject::test_publish - Excep...
ERROR src/systemtest/test_level2.py::TestPublishProject::test_publish_unknown_project
ERROR src/systemtest/test_level2.py::TestPublishProject::test_no_credentials
ERROR src/systemtest/test_level2.py::TestPublishProject::test_bad_credentials
ERROR src/systemtest/test_swagger.py::TestSwaggerViews::test_gui - Exception:...
ERROR src/systemtest/test_vds.py::test_vds_file4ace_exists - Exception: Comma...
ERROR src/systemtest/test_vds.py::test_vds_file4mipas_exists - Exception: Com...
ERROR src/systemtest/test_vds.py::test_vds_file4mipas_esa_exists - Exception:...
ERROR src/systemtest/test_vds.py::test_vds_file4mls_exists - Exception: Comma...
ERROR src/systemtest/test_vds.py::test_vds_file4osiris_exists - Exception: Co...
ERROR src/systemtest/test_vds.py::test_vds_file4sageIII_exists - Exception: C...
ERROR src/systemtest/test_vds.py::test_vds_file4smiles_exists - Exception: Co...
ERROR src/systemtest/test_vds.py::test_vds_file4smr_exists - Exception: Comma...
ERROR src/systemtest/test_vds.py::test_vds_file4ace_is_readable - Exception: ...
ERROR src/systemtest/test_vds.py::test_vds_file4mipas_is_readable - Exception...
ERROR src/systemtest/test_vds.py::test_vds_file4mipas_esa_is_readable - Excep...
ERROR src/systemtest/test_vds.py::test_vds_file4mls_is_readable - Exception: ...
ERROR src/systemtest/test_vds.py::test_vds_file4smiles_is_readable - Exceptio...
ERROR src/systemtest/test_vds.py::test_vds_file4sageIII_is_readable - Excepti...
ERROR src/systemtest/test_vds.py::test_vds_file4osiris_is_readable - Exceptio...
ERROR src/systemtest/test_vds.py::test_vds_file4smr_is_readable - Exception: ...
ERROR src/systemtest/api/test_project_annotations.py::test_get_empty_annotations
ERROR src/systemtest/api/test_project_annotations.py::test_get_annotations_unknown_project
ERROR src/systemtest/api/test_project_annotations.py::test_post - Exception: ...
ERROR src/systemtest/api/test_project_annotations.py::test_post_multiple - Ex...
ERROR src/systemtest/api/test_project_annotations.py::test_post_unknown_project
ERROR src/systemtest/api/test_project_annotations.py::test_post_bad_text - Ex...
ERROR src/systemtest/api/test_project_annotations.py::test_post_no_text - Exc...
ERROR src/systemtest/api/test_project_annotations.py::test_post_bad_freqmode
ERROR src/systemtest/api/test_project_annotations.py::test_post_no_credentials
ERROR src/systemtest/api/test_project_annotations.py::test_post_bad_credentials
================= 4 skipped, 438 warnings, 215 errors in 7.13s =================
system: exit 1 (8.00 seconds) /home/joakim/work/odin-api> pytest src/systemtest pid=9681
  system: FAIL code 1 (8.12=setup[0.12]+cmd[8.00] seconds)
  evaluation failed :( (8.25 seconds)
